 import java.awt.*;
   import javax.swing.*;
   /*****************************************************************
     * A Player is the in-game character controlled by the player
     * @author Tony Liang and Prateek Gunnam
     * @version 1
     ****************************************************************/
     public class Player
     {
       private int myX;   // x and y coordinates of center
       private int myY;
       private int mySpeed;
       private ImageIcon myImage;
       
       /************************************************************* 
   	* Constructs with predetermined xPoint, yPoint
      * @ param s  initial mySpeed
   	**************************************************************/

       public Player(int s, ImageIcon icon)
       {
       myX = 400;
       myY = 650;
       mySpeed = s;
       myImage = icon;
        
       
       
       }

       /*************************************************************
       * Constructs a Player with initial x and y. Sets pre-determined diameter.
       * @param x    initial xPosition
       * @param y    initial yPosition
       * @param s    initial mySpeed
       **************************************************************/

      
       public Player(int x, int y, int s, ImageIcon icon)
       {
       myX = x;
       myY = y;
       mySpeed = s;
       myImage = icon;
       }
  
   /*************************************************************** 
   	* Returns the Player's xPosition
   	* @return x
   	**************************************************************/

       public int getX()
       {
       return myX;
       }
       /*************************************************************** 
   	* Returns the Player's Speed
   	* @return speed
   	**************************************************************/  
 
       public int getSpeed()
       {
       return mySpeed;
       }
        /*************************************************************** 
   	* Returns the Player's yPosition
   	* @return y
   	**************************************************************/
       public int getY()
       {
       return myY;
       }
        /*************************************************************** 
   	* Returns the Player's image
   	* @return icon
   	**************************************************************/
       public ImageIcon getImage()
       {
       return myImage;
       }
       
       
       
      /*************************************************************** 
   	* Sets Player's speed to a specified input number
   	* @param s assign s to Speed
   	**************************************************************/
       public void setSpeed(int s)
       {
       mySpeed = s;
       }
      /*************************************************************** 
   	* Sets Player's yPosition to a specified input number
   	* @param y assign y to yPosition
   	**************************************************************/
       public void setY(int y)
       {
       myY = y;
       }
      /*************************************************************** 
   	* Sets Player's xPosition to a specified input number
   	* @param x assign x to xPosition
   	**************************************************************/
       public void setX(int x)
       {
       myX = x;
       }
       
       /*************************************************************** 
   	* Sets Player's image to a specified input ImageIcon
   	* @param icon assign icon to Image
   	**************************************************************/
       public void setImage(ImageIcon icon)
       {
       myImage = icon;
       }

       /**************************************************************************************
       * Draws a character using a predrawn image
       * @param myBuffer    assigns myBuffer to be drawn on
       * @param icon        assigns icon as image object
       ***************************************************************************************/

      
       public void draw(Graphics myBuffer, ImageIcon icon)
       { 
         
          myBuffer.setColor(Color.WHITE);
         myBuffer.fillOval(getX(), getY(),100 , 100);
         myBuffer.drawImage(icon.getImage(), getX(), getY(), null); 
 


       }
    }

