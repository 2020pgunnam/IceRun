   //Name:    Date:
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.awt.image.*;
public class IceRunPanel extends JPanel
{
   private static final int FRAME = 800;
   private static final Color BACKGROUND = Color.WHITE;
   

   private BufferedImage myImage;
   private Graphics myBuffer;
   private SpeedPlayer power;
   private Icicle icicle;
   private Timer t; 

		  
   public IceRunPanel()
   {
      myImage =  new BufferedImage(FRAME, FRAME, BufferedImage.TYPE_INT_RGB);
      myBuffer = myImage.getGraphics();
      myBuffer.setColor(BACKGROUND);
      myBuffer.fillRect(0, 0, FRAME,FRAME);
      int xPos = (int)(Math.random()*(FRAME-100) + 50);
      int yPos = (int)(Math.random()*(FRAME-100)+ 50);
      /******************************/
      /* Instantiate class objects  */
      /******************************/
      int[] array = {200,250,225};
      int[] array2 = {30,30,150};
     icicle = new Icicle(array, array2, Color.RED);
      
      addKeyListener(new Key());
      setFocusable(true);
      t = new Timer(5, new Listener());
      t.start();
   
         
   }
   private class Key extends KeyAdapter
   
   {
   
      public void keyPressed(KeyEvent e)
      {
      
         if(e.getKeyCode() == KeyEvent.VK_W)
         {
           
         }
      
         if(e.getKeyCode() == KeyEvent.VK_S)
         {
                     
         }
      
         if(e.getKeyCode() == KeyEvent.VK_UP)
         {
           
         }
      
         if(e.getKeyCode() == KeyEvent.VK_DOWN)
         {
            
         }
      
        /************************************/
        /*Prevent player from leaving frame.*/
        /************************************/
      }
   
   }
  
   public void paintComponent(Graphics g)
   {
      g.drawImage(myImage, 0, 0, getWidth(), getHeight(), null);
     
      /*********************************/
      /*                               */
      /*  Your code goes here.         */
      /*                               */
      /*********************************/

      
   }
   private class Listener implements ActionListener
   {
      public void actionPerformed(ActionEvent e)
      {
        icicle.draw(myBuffer);
        
        /*********************************/
        /*                               */
        /*  Your code goes here.         */
        /*                               */
        /*********************************/
        
      }
   }
   private void drop(Icicle icicle)
   {
        /*********************************/
        /*                               */
        /*  Your code goes here.         */
        /*                               */
        /*********************************/
        

   
   
   }   
   }
   
      
  
