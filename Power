   


   import java.awt.*;
   import java.util.*;
   
   public class Power
   {
      private int myX;
      private int myY
      
      private Color myColor; 
      // constructors
      public Icicle()     //default constructor
      {
         int[] myXPoints = {200,250,225};
         int[] myYPoints = {0, 0, 50};
         myColor = Color.WHITE;
         
      }
      public Icicle(int[] xPoints, int[] yPoints, Color c)
      {
         int[] myXPoints = Arrays.copyOf(xPoints, xPoints.length);
         int[] myYPoints = Arrays.copyOf(yPoints, yPoints.length);
         myColor = c;
         
      }
    // accessor methods
      public int[] getX() 
      { 
         return myXPoints;
      }
      public int[] getY()      
      { 
         return myYPoints;
      }
      public int getHeight() 
      { 
         return myYPoints[3] - myYPoints[2];
      }
      public int getBase() 
      { 
         return myXPoints[2] - myXPoints[1];
      }

      public Color getColor() 
      { 
         return myColor;
      }
         // modifier methods
      public void setX(int[] xPoints)
      {
         int[] myXPoints = Arrays.copyOf(xPoints, xPoints.length);
      } 
      public void setY(int[] yPoints)
      {
         int[] myYPoints = Arrays.copyOf(yPoints, yPoints.length);
      } 
      public void setColor(Color c)
      {
         myColor = c;
      }
         //	 instance methods
      public void jump(int rightEdge, int bottomEdge)
      {
         // moves location to random (x, y) within the edges
         int x = (int)(Math.random()* (rightEdge- this.getBase()) + this.getBase());
         int[]  myXPoints = {x, 20 + x, 10 + x};
      }
      public void draw(Graphics myBuffer) 
      {
         myBuffer.setColor(myColor);
         myBuffer.fillPolygon(myXPoints, myYPoints, nPoint);
        
      }
   }
