   //Name:    Date:
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.awt.image.*;
public class IceRunPanel extends JPanel
{
   private static final int FRAME = 750;
   private static final Color BACKGROUND = Color.WHITE;
   

   private BufferedImage myImage;
   private Graphics myBuffer; 
   private Timer t;
   private Icicle bob;
   private SpeedPlayer speed;
   private ImageIcon icon;
   

		  
   public IceRunPanel()
   {
      myImage =  new BufferedImage(FRAME, FRAME, BufferedImage.TYPE_INT_RGB);
      myBuffer = myImage.getGraphics();
      myBuffer.setColor(BACKGROUND);
      myBuffer.fillRect(0, 0, FRAME,FRAME);
      bob = new Icicle();
      speed = new SpeedPlayer(20,20, Color.RED);
      icon = new ImageIcon("/images/fire.jpg");
      addKeyListener(new Key());
      setFocusable(true);
      t = new Timer(5, new Listener());
      t.start();
   
         
   }
   private class Key extends KeyAdapter
   
   {
   
      public void keyPressed(KeyEvent e)
      {
      
         if(e.getKeyCode() == KeyEvent.VK_RIGHT)
         {
         speed.setX(speed.getX() + 10);
         }
      
         if(e.getKeyCode() == KeyEvent.VK_LEFT)
         {
         speed.setX(speed.getX() - 10);        
         }
      
         if(e.getKeyCode() == KeyEvent.VK_UP)
         {
         speed.setY(speed.getY() - 10);
         }
         
         
         if(e.getKeyCode() == KeyEvent.VK_DOWN  )
         {
            speed.setY(speed.getY() + 10);
         }
      
        /************************************/
        /*Prevent player from leaving frame.*/
        /************************************/
      }
   
   }
  
   public void paintComponent(Graphics g)
   {
      g.drawImage(myImage, 0, 0, getWidth(), getHeight(), null);
     
      //paint any new changes, such as icicles falling and player moving
       
      
   }
   private class Listener implements ActionListener
   {
      public void actionPerformed(ActionEvent e)
      {
         myBuffer.setColor(BACKGROUND);
         myBuffer.fillRect(0,0,FRAME,FRAME);
        
        
         bob.setColor(Color.RED);
         bob.draw(myBuffer);
         drop(bob);
         speed.draw(myBuffer,icon);
         
         
      
      
         
      
         repaint();
      
        
        
      }
   }
   private void drop(Icicle icicle)
   {	
      int[] array = icicle.getYPoints();
      for(int x = 0; x < array.length; x++)
         array[x] = array[x] + 5;
      icicle.setY(array);
      
   
   }
   
   private void reset(Icicle icicle)
   {
   
   
   
   
   
   
   
   }   
}
   
      
  
